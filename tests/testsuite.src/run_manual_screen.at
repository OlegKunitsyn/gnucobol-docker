## Copyright (C) 2014-2018 Free Software Foundation, Inc.
## Written by Edward Hart, Simon Sobisch
##
## This file is part of GnuCOBOL.
##
## The GnuCOBOL compiler is free software: you can redistribute it
## and/or modify it under the terms of the GNU General Public License
## as published by the Free Software Foundation, either version 3 of the
## License, or (at your option) any later version.
##
## GnuCOBOL is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with GnuCOBOL.  If not, see <http://www.gnu.org/licenses/>.

### GnuCOBOL Test Suite

### ISO+IEC+1989-2014 9.2 Screens, 13.17 Screen description entry, 13.18 Data
###  division clauses.

AT_SETUP([LINE])
AT_KEYWORDS([])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  LINE 1 VALUE 'Enter "y" if the numbers below correspond '
               & 'to their line number and are in the '.
           03  LINE 2 VALUE 'first column. (This is line 2.)'.
           03  LINE 3 VALUE '3'.
           03  LINE 4 VALUE '4'.
           03  LINE 5 VALUE '5'.
           03  group-1 LINE - 3.
               05  group-2 COL 5.
                   07  LINE PLUS 6 VALUE '8'.
                   07  LINE MINUS 2 VALUE '6'.
           03  group-3 LINE + 1.
               05 COL 1 VALUE '7'.
           03  LINE + 3 PIC X, REQUIRED USING success-flag.

       PROCEDURE        DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([COLUMN])
AT_KEYWORDS([COL])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  dummy        PIC X(5).
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  VALUE 'Enter "y" if the numbers below correspond to '
               & 'their column number.'.
           03  LINE 2 VALUE '123456789'.
           03  LINE 3 COLUMN 2.
               05  COL 1 VALUE '1'.
               05  COL 5 VALUE '5'.
               05  COL MINUS 2 VALUE '3'.
               05  COL PLUS 1 VALUE '4'.
               05  group-1 LINE 3.
                   07  VALUE '2'.
                   07  group-2 COLUMN + 4.
                       09  group-3.
                           11 COL + 0 VALUE '6'.
               05  COLUMN + 1, VALUE '7'.
           03  LINE 5 PIC X, REQUIRED, USING success-flag.

       PROCEDURE        DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([LINE non-zero, COLUMN zero])
AT_KEYWORDS([COL extensions])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  LINE 1 VALUE 'Enter "y" if you see 123 on the line '-
               'below starting at column 1.'.
           03  LINE + 3 PIC X, REQUIRED USING success-flag.
           03  LINE 2 VALUE '1'.

       PROCEDURE        DIVISION.
           DISPLAY scr
           DISPLAY '2' LINE 2, COLUMN 0; '3'
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([LINE zero, COLUMN non-zero])
AT_KEYWORDS([COL zero extensions])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  LINE 1 VALUE 'Enter "y" if you see 123 on the line '-
               'below starting at column 1.'.
           03  LINE + 3 PIC X, REQUIRED USING success-flag.
           03  LINE 2 COL 3, VALUE '3'.
           03  LINE 1 COL 80 VALUE ' '.

       PROCEDURE        DIVISION.
           DISPLAY scr
           DISPLAY '1' LINE 0, COLUMN 1; '2'
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([LINE zero, COLUMN zero])
AT_KEYWORDS([COL extensions])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  LINE 1 VALUE 'Enter "y" if you see 1234 on the line '-
               'below starting at column 1.'.
           03  LINE + 3 PIC X, REQUIRED USING success-flag.
           03  LINE 2 VALUE '1'.

       PROCEDURE        DIVISION.
           DISPLAY scr
           DISPLAY '2' LINE 0, COLUMN 0
           DISPLAY '3' LINE 2, COLUMN 3
           DISPLAY '4' AT 0000

           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([DISPLAY AT])
AT_KEYWORDS([extensions])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       01  screen-loc   PIC 9(6) VALUE 4004.

       SCREEN           SECTION.
       01  scr.
           03  VALUE 'Enter "y" if the numbers 1-3 are in a diagonal'-
               ' line from line 2, column 2.'.
           03  success-field PIC X, LINE 6, REQUIRED,
                                    USING success-flag.

       PROCEDURE DIVISION.
           DISPLAY '1' AT 0202
           DISPLAY '2' AT 003003
           DISPLAY '3' AT screen-loc
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([DISPLAY LOW-VALUES (one statement)])
AT_KEYWORDS([LOW-VALUE extensions])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  LINE 1 VALUE 'Enter "y" if the word below starts at line'
               & ' 3, column 3.'.
           03  LINE + 4 PIC X, REQUIRED USING success-flag.

       PROCEDURE        DIVISION.
           DISPLAY scr
           DISPLAY LOW-VALUES AT LINE 3, COL 3; 'Hello!'
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([DISPLAY LOW-VALUES (two statements)])
AT_KEYWORDS([LOW-VALUE extensions])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  LINE 1 VALUE 'Enter "y" if the word below starts at line'
               & ' 3, column 3.'.
           03  LINE + 4 PIC X, REQUIRED USING success-flag.

       PROCEDURE        DIVISION.
           DISPLAY scr
           DISPLAY LOW-VALUES AT LINE 3, COL 3
           DISPLAY 'Hello!' UPON CRT
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([DISPLAY SPACES])
AT_KEYWORDS([SPACE extensions])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr-1.
           03  LINE 1 VALUE 'Enter "y" if all the text after foo in the'
               & ' screen has been erased.'.
           03  LINE 3 VALUE 'Lorem ipsum dolor sit amet, consectetur ad'
               & 'ipiscing elit. Curabitur dapibus dui'.
           03  LINE 4 VALUE 'vitae augue lobortis, non tempor diam tris'
               & 'tique. Donec dignissim ex velit, ut'.
           03  LINE 5 VALUE 'efficitur tellus pharetra at. Curabitur at'
               & ' condimentum nunc, nec accumsan'.
           03  LINE 6 VALUE 'nulla. Nulla at feugiat elit, eget condime'
               & 'ntum justo. Nam lorem lectus,'.
           03  LINE 7 VALUE 'imperdiet sit amet odio eu, eleifend conse'
               & 'ctetur ligula. Duis diam felis, porta'.
           03  LINE 8 VALUE 'id diam id, ultrices finibus augue. Mauris'
               & ' imperdiet, dolor sed sodales porta,'.
           03  LINE 9 VALUE 'justo nunc consequat nulla, iaculis venena'
               & 'tis lorem libero sit amet'.
           03  LINE 10 VALUE 'magna. Nullam pulvinar nullam.'.
           03  success-field LINE + 2, PIC X, REQUIRED,
                                       USING success-flag.

       PROCEDURE        DIVISION.
           DISPLAY scr-1
           DISPLAY SPACES AT LINE 6, COL 8; 'foo' HIGHLIGHT
           ACCEPT success-field

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE -fdisplay-special-fig-consts prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([DISPLAY ALL X'01'])
AT_KEYWORDS([SOH extensions])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr-1.
           03  LINE 1 VALUE 'Enter "y" if all the text after foo on '
               & 'that line alone has been erased.'.
           03  LINE 3 VALUE 'Lorem ipsum dolor sit amet, consectetur ad'
               & 'ipiscing elit. Curabitur dapibus dui'.
           03  LINE 4 VALUE 'vitae augue lobortis, non tempor diam tris'
               & 'tique. Donec dignissim ex velit, ut'.
           03  LINE 5 VALUE 'efficitur tellus pharetra at. Curabitur at'
               & ' condimentum nunc, nec accumsan'.
           03  LINE 6 VALUE 'nulla. Nulla at feugiat elit, eget condime'
               & 'ntum justo. Nam lorem lectus,'.
           03  LINE 7 VALUE 'imperdiet sit amet odio eu, eleifend conse'
               & 'ctetur ligula. Duis diam felis, porta'.
           03  LINE 8 VALUE 'id diam id, ultrices finibus augue. Mauris'
               & ' imperdiet, dolor sed sodales porta,'.
           03  LINE 9 VALUE 'justo nunc consequat nulla, iaculis venena'
               & 'tis lorem libero sit amet'.
           03  LINE 10 VALUE 'magna. Nullam pulvinar nullam.'.
           03  success-field LINE + 2, PIC X, REQUIRED,
                                       USING success-flag.

       PROCEDURE        DIVISION.
           DISPLAY scr-1
           DISPLAY ALL X'01', LINE 6, COLUMN 8; 'foo' HIGHLIGHT
           ACCEPT success-field

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE -fdisplay-special-fig-consts prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([DISPLAY ALL X'02'])
AT_KEYWORDS([STX extensions])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr-1.
           03  LINE 3 VALUE 'Lorem ipsum dolor sit amet, consectetur ad'
               & 'ipiscing elit. Curabitur dapibus dui'.
           03  LINE 4 VALUE 'vitae augue lobortis, non tempor diam tris'
               & 'tique. Donec dignissim ex velit, ut'.
           03  LINE 5 VALUE 'efficitur tellus pharetra at. Curabitur at'
               & ' condimentum nunc, nec accumsan'.
           03  LINE 6 VALUE 'nulla. Nulla at feugiat elit, eget condime'
               & 'ntum justo. Nam lorem lectus,'.
           03  LINE 7 VALUE 'imperdiet sit amet odio eu, eleifend conse'
               & 'ctetur ligula. Duis diam felis, porta'.
           03  LINE 8 VALUE 'id diam id, ultrices finibus augue. Mauris'
               & ' imperdiet, dolor sed sodales porta,'.
           03  LINE 9 VALUE 'justo nunc consequat nulla, iaculis venena'
               & 'tis lorem libero sit amet'.
           03  LINE 10 VALUE 'magna. Nullam pulvinar nullam.'.

       01  scr-2.
           03  LINE 6 COL 8 VALUE 'foo' BLANK SCREEN, HIGHLIGHT.
           03  LINE 1 VALUE 'Enter "y" if foo is the only word below.'.

       01  scr-3.
           03  VALUE 'Enter "y" if foo is the only word below.'.
           03  success-field COL + 2, PIC X, REQUIRED,
                                      USING success-flag.

       PROCEDURE        DIVISION.
           DISPLAY scr-1
           DISPLAY ALL X'02' AT LINE 6 COL 8; 'foo' HIGHLIGHT
           DISPLAY scr-3
           ACCEPT scr-3

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE -fdisplay-special-fig-consts prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([DISPLAY ALL X'07'])
AT_KEYWORDS([BELL BEEP extensions])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  VALUE 'Enter "y" if you heard a beep:'.
           03  success-field PIC X, COL + 2, REQUIRED, TO success-flag
                                                       FROM 'Y'.
       01  scr2.
           03  LINE 4 VALUE 'system beep may be turned off ' &
                             'on this system.'.
           03  LINE 5 VALUE 'Retesting with COB_BELL=FLASH...'.
           03  LINE + 2
               VALUE 'Enter "y" if you''ve seen your terminal flash'.
           03  success-field PIC X, COL + 2, REQUIRED, TO success-flag
                                                       FROM 'Y'.

       PROCEDURE DIVISION.
           DISPLAY scr
           DISPLAY ALL X'07' UPON CRT
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           END-IF

           SET ENVIRONMENT 'COB_BELL' TO 'FLASH'
           CALL 'C$SLEEP' USING '1'

           DISPLAY scr2
           DISPLAY ALL X'07' UPON CRT
           ACCEPT scr2

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE -fdisplay-special-fig-consts prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([Screen position after field display])
AT_KEYWORDS([LINE COLUMN])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  VALUE 'Enter "y" if this sentence starts at line 1,'-
               ' column 1:'.
           03  success-field PIC X, COL + 2, REQUIRED,
                                             USING success-flag.

       PROCEDURE DIVISION.
           DISPLAY 'ignore this' AT LINE 4 COL 4
           DISPLAY scr
           ACCEPT success-field

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP

# See section 13.17.3

AT_SETUP([Overridden clauses (1)])
AT_KEYWORDS([LINE COLUMN COL])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  dummy        PIC X(5).
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
       03  VALUE 'Enter "y" if the numbers below correspond to their'
           & ' column number and all on'.
           03  LINE 2 VALUE 'lines 3 and 4.'.
           03  LINE 3 VALUE '123456789'.
           03  LINE 4 VALUE '  34'.
           03  FILLER LINE + 6.
               05 COL 3.
                   07  COL 1.
                       09  LINE 4 VALUE '1'.
                       09  VALUE '2'.
               05  LINE + 1, COL + 2.
                   07  LINE 4, COL + 1, VALUE '5'.
           03  LINE 6 PIC X, REQUIRED, USING success-flag.

       PROCEDURE        DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([Overridden clauses (2)])
AT_KEYWORDS([HIGHLIGHT LOWLIGHT])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  dummy        PIC X(5).
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  VALUE 'Enter "y" if the word below is not dim and has'
               & ' black background.'.
           03  LINE + 1, LOWLIGHT BACKGROUND-COLOR 3.
               05  HIGHLIGHT BACKGROUND-COLOR 0.
                   07 VALUE 'Highlight'.
           03  LINE + 2, PIC X USING success-flag.

       PROCEDURE        DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([AUTO])
AT_KEYWORDS([position])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  dummy        PIC X(5).
       01  success-flag PIC X.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03                PIC X(80) VALUE 'Enter "y" in the bottom'
                             & ' field if:'.
           03  LINE + 1,     PIC X(80) VALUE ' * when the left field is'
                             & ' full, the cursor automatically moves'.
           03  LINE + 1,     PIC X(80) VALUE '   to the next field.'.
           03  LINE + 1,     PIC X(80) VALUE ' * this does not happen'
                             & ' with the other fields.'.
           03  LINE + 1,     PIC X(80) VALUE ' * the fields below are'
                             & ' on one line and separated by a single'
                             & ' column.'.

           03  test-fields   LINE + 2.
               05  field-1   COL 1, PIC X(5) AUTO TO dummy.
               05  field-2   COL + 2, PIC X(5) TO dummy.
               05  field-3   COL + 2, PIC X(5) TO dummy.
           03  success-field LINE + 2, COLUMN 1; PIC X, REQUIRED
                             TO success-flag FROM 'Y'.

       PROCEDURE DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([BACKGROUND- / FOREGROUND-COLOUR])
AT_KEYWORDS([BACKGROUND-COLOR BACKGROUND-COLOUR FOREGROUND-COLOR])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  dummy        PIC X(10).
       01  success-flag PIC X.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  PIC X(80)
               VALUE 'Enter "y" if the text below matches the colour '
               & 'of the background/text.'.
           03  LINE + 1, COL 1, PIC X(80)
               VALUE 'Note: the black text is on white background/the '
               & 'white background has black text'.
           03  LINE + 1, COL 1, PIC X(80)
               VALUE 'to make the text visible.'.

           03  LINE + 1.
               05  COL 1, PIC X(8) VALUE 'Black' FOREGROUND-COLOR 0
                   BACKGROUND-COLOR 7.
               05  COL + 2, PIC X(8) VALUE 'Blue' FOREGROUND-COLOR 1.
               05  COL + 2, PIC X(8) VALUE 'Green' FOREGROUND-COLOR 2.
               05  COL + 2, PIC X(8) VALUE 'Cyan' FOREGROUND-COLOR 3.
               05  COL + 2, PIC X(8) VALUE 'Red' FOREGROUND-COLOR 4.
               05  COL + 2, PIC X(8) VALUE 'Magenta' FOREGROUND-COLOR 5.
               05  COL + 2, PIC X(15) VALUE 'Brown/Yellow'
                   FOREGROUND-COLOR 6.
               05  COL + 2, PIC X(8) VALUE 'White' FOREGROUND-COLOR 7.

           03  LINE + 1.
               05  COL 1, PIC X(8) VALUE 'Black' BACKGROUND-COLOR 0
                   FOREGROUND-COLOR 7.
               05  COL + 2, PIC X(8) VALUE 'Blue' BACKGROUND-COLOR 1.
               05  COL + 2, PIC X(8) VALUE 'Green' BACKGROUND-COLOR 2.
               05  COL + 2, PIC X(8) VALUE 'Cyan' BACKGROUND-COLOR 3.
               05  COL + 2, PIC X(8) VALUE 'Red' BACKGROUND-COLOR 4.
               05  COL + 2, PIC X(8) VALUE 'Magenta' BACKGROUND-COLOR 5.
               05  COL + 2, PIC X(15) VALUE 'Brown/Yellow'
                   BACKGROUND-COLOR 6.
               05  COL + 2, PIC X(8) VALUE 'White' BACKGROUND-COLOR 7
                   FOREGROUND-COLOR 0.

           03  success-field LINE + 2, COL 1, PIC X, REQUIRED,
               TO success-flag FROM 'Y'.

       PROCEDURE DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([BEEP])
AT_KEYWORDS([BELL FLASH])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  BELL.
           03  VALUE 'Enter "y" if you heard a beep:'.
           03  success-field PIC X, COL + 2, REQUIRED, TO success-flag
                                                       FROM 'Y'.
       01  scr2.
           03  LINE 4 VALUE 'system beep may be turned off ' &
                             'on this system.'.
           03  LINE 5 VALUE 'Retesting with COB_BELL=FLASH...'.
           03  LINE + 2,
               VALUE 'Enter "y" if you''ve seen your terminal flash'.
           03  success-field PIC X, COL + 2, REQUIRED, TO success-flag
                                                       FROM 'Y'.

       PROCEDURE DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           END-IF

           SET ENVIRONMENT 'COB_BELL' TO 'FLASH'
           CALL 'C$SLEEP' USING '1'

           DISPLAY scr2
           DISPLAY ALL X'07' UPON CRT
           ACCEPT scr2

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([BLANK LINE])
AT_KEYWORDS([])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr-1.
           03  LINE 3 VALUE 'Lorem ipsum dolor sit amet, consectetur ad'
               & 'ipiscing elit. Curabitur dapibus dui'.
           03  LINE 4 VALUE 'vitae augue lobortis, non tempor diam tris'
               & 'tique. Donec dignissim ex velit, ut'.
           03  LINE 5 VALUE 'efficitur tellus pharetra at. Curabitur at'
               & ' condimentum nunc, nec accumsan'.
           03  LINE 6 VALUE 'nulla. Nulla at feugiat elit, eget condime'
               & 'ntum justo. Nam lorem lectus,'.
           03  LINE 7 VALUE 'imperdiet sit amet odio eu, eleifend conse'
               & 'ctetur ligula. Duis diam felis, porta'.
           03  LINE 8 VALUE 'id diam id, ultrices finibus augue. Mauris'
               & ' imperdiet, dolor sed sodales porta,'.
           03  LINE 9 VALUE 'justo nunc consequat nulla, iaculis venena'
               & 'tis lorem libero sit amet'.
           03  LINE 10 VALUE 'magna. Nullam pulvinar nullam.'.
           03  success-field LINE + 2, PIC X, REQUIRED,
                                              USING success-flag.

       01  scr-2.
           03  LINE 6 COL 8 VALUE 'foo' BLANK LINE, HIGHLIGHT.
           03  LINE 1 VALUE 'Enter "y" if foo is the only word on one'
               & ' line.'.

       PROCEDURE        DIVISION.
           DISPLAY scr-1
           DISPLAY scr-2
           ACCEPT success-field

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([BLANK SCREEN])
AT_KEYWORDS([])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr-1.
           03  LINE 3 VALUE 'Lorem ipsum dolor sit amet, consectetur ad'
               & 'ipiscing elit. Curabitur dapibus dui'.
           03  LINE 4 VALUE 'vitae augue lobortis, non tempor diam tris'
               & 'tique. Donec dignissim ex velit, ut'.
           03  LINE 5 VALUE 'efficitur tellus pharetra at. Curabitur at'
               & ' condimentum nunc, nec accumsan'.
           03  LINE 6 VALUE 'nulla. Nulla at feugiat elit, eget condime'
               & 'ntum justo. Nam lorem lectus,'.
           03  LINE 7 VALUE 'imperdiet sit amet odio eu, eleifend conse'
               & 'ctetur ligula. Duis diam felis, porta'.
           03  LINE 8 VALUE 'id diam id, ultrices finibus augue. Mauris'
               & ' imperdiet, dolor sed sodales porta,'.
           03  LINE 9 VALUE 'justo nunc consequat nulla, iaculis venena'
               & 'tis lorem libero sit amet'.
           03  LINE 10 VALUE 'magna. Nullam pulvinar nullam.'.
           03  success-field LINE + 2, PIC X, REQUIRED,
                                              USING success-flag.

       01  scr-2.
           03  LINE 6 COL 8 VALUE 'foo' BLANK SCREEN, HIGHLIGHT.
           03  LINE 1 VALUE 'Enter "y" if foo is the only word below.'.

       PROCEDURE        DIVISION.
           DISPLAY scr-1
           DISPLAY scr-2
           ACCEPT success-field

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([BLANK ignored in ACCEPT])
AT_KEYWORDS([])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  LINE 1 VALUE 'Enter "y" if you can see lorem ipsum '
               & 'filler text.'.
           03  LINE 3 COL 3 VALUE 'Lorem ipsum dolor sit amet,'
               & ' consectetur ad ipiscing elit.'.

       01  success-scr.
           03 LINE 3, BLANK LINE, PIC X, REQUIRED, USING success-flag.

       PROCEDURE        DIVISION.
           DISPLAY scr
           ACCEPT success-scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([BLINK])
AT_KEYWORDS([])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  PIC X(80)
               VALUE 'Enter "y" if the string below is blinking:'.
           03  LINE + 1, PIC X(10) VALUE 'Blink' BLINK.
           03  success-field LINE + 2, PIC X, REQUIRED,
                                              USING success-flag.

       PROCEDURE DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([ERASE EOS])
AT_KEYWORDS([])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr-1.
           03  LINE 1 VALUE 'Enter "y" if all the text after foo in the'
               & ' screen has been erased.'.
           03  LINE 3 VALUE 'Lorem ipsum dolor sit amet, consectetur ad'
               & 'ipiscing elit. Curabitur dapibus dui'.
           03  LINE 4 VALUE 'vitae augue lobortis, non tempor diam tris'
               & 'tique. Donec dignissim ex velit, ut'.
           03  LINE 5 VALUE 'efficitur tellus pharetra at. Curabitur at'
               & ' condimentum nunc, nec accumsan'.
           03  LINE 6 VALUE 'nulla. Nulla at feugiat elit, eget condime'
               & 'ntum justo. Nam lorem lectus,'.
           03  LINE 7 VALUE 'imperdiet sit amet odio eu, eleifend conse'
               & 'ctetur ligula. Duis diam felis, porta'.
           03  LINE 8 VALUE 'id diam id, ultrices finibus augue. Mauris'
               & ' imperdiet, dolor sed sodales porta,'.
           03  LINE 9 VALUE 'justo nunc consequat nulla, iaculis venena'
               & 'tis lorem libero sit amet'.
           03  LINE 10 VALUE 'magna. Nullam pulvinar nullam.'.
           03  success-field LINE + 2, PIC X, REQUIRED,
                                              USING success-flag.

       01  scr-2.
           03  LINE 6 COL 8 VALUE 'foo' ERASE EOS, HIGHLIGHT.

       PROCEDURE        DIVISION.
           DISPLAY scr-1
           DISPLAY scr-2
           ACCEPT success-field

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([ERASE EOL])
AT_KEYWORDS([])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr-1.
           03  LINE 1 VALUE 'Enter "y" if all the text after foo on '
               & 'that line alone has been erased.'.
           03  LINE 3 VALUE 'Lorem ipsum dolor sit amet, consectetur ad'
               & 'ipiscing elit. Curabitur dapibus dui'.
           03  LINE 4 VALUE 'vitae augue lobortis, non tempor diam tris'
               & 'tique. Donec dignissim ex velit, ut'.
           03  LINE 5 VALUE 'efficitur tellus pharetra at. Curabitur at'
               & ' condimentum nunc, nec accumsan'.
           03  LINE 6 VALUE 'nulla. Nulla at feugiat elit, eget condime'
               & 'ntum justo. Nam lorem lectus,'.
           03  LINE 7 VALUE 'imperdiet sit amet odio eu, eleifend conse'
               & 'ctetur ligula. Duis diam felis, porta'.
           03  LINE 8 VALUE 'id diam id, ultrices finibus augue. Mauris'
               & ' imperdiet, dolor sed sodales porta,'.
           03  LINE 9 VALUE 'justo nunc consequat nulla, iaculis venena'
               & 'tis lorem libero sit amet'.
           03  LINE 10 VALUE 'magna. Nullam pulvinar nullam.'.
           03  success-field LINE + 2, PIC X, REQUIRED,
                                              USING success-flag.

       01  scr-2.
           03  LINE 6 COL 8 VALUE 'foo' ERASE EOL, HIGHLIGHT.

       PROCEDURE        DIVISION.
           DISPLAY scr-1
           DISPLAY scr-2
           ACCEPT success-field

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([ERASE ignored in ACCEPT])
AT_KEYWORDS([EOS])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.

       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  LINE 1 VALUE 'Enter "y" if you can see lorem ipsum '
               & 'filler text.'.
           03  LINE 3 VALUE 'Lorem ipsum dolor sit amet, consectetur ad'
               & 'ipiscing elit. Curabitur dapibus dui'.
           03  LINE 4 VALUE 'vitae augue lobortis, non tempor diam tris'
               & 'tique. Donec dignissim ex velit, ut'.
           03  LINE 5 VALUE 'efficitur tellus pharetra at. Curabitur at'
               & ' condimentum nunc, nec accumsan'.
           03  LINE 6 VALUE 'nulla. Nulla at feugiat elit, eget condime'
               & 'ntum justo. Nam lorem lectus,'.
           03  LINE 7 VALUE 'imperdiet sit amet odio eu, eleifend conse'
               & 'ctetur ligula. Duis diam felis, porta'.
           03  LINE 8 VALUE 'id diam id, ultrices finibus augue. Mauris'
               & ' imperdiet, dolor sed sodales porta,'.
           03  LINE 9 VALUE 'justo nunc consequat nulla, iaculis venena'
               & 'tis lorem libero sit amet'.
           03  LINE 10 VALUE 'magna. Nullam pulvinar nullam.'.
           03  LINE 3 ERASE EOS.
           03  success-field LINE 12, PIC X, REQUIRED,
                                             USING success-flag.

       PROCEDURE        DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([FULL and REQUIRED])
AT_KEYWORDS([])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  dummy        PIC X(10).
       01  success-flag PIC X.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  PIC X(80)
               VALUE 'Enter "y" if you cannot continue without filling '
               & 'all of the below field:'.
           03  LINE + 1, PIC X(10), FULL, REQUIRED, TO dummy.
                    *> no initial value for success as we request input
           03  success-field LINE + 2, PIC X, REQUIRED, TO success-flag.

       PROCEDURE DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([HIGHLIGHT])
AT_KEYWORDS([])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  PIC X(80)
               VALUE 'Enter "y" if the text below is bright '
               & '(highlighted):'.
           03  LINE + 1, PIC X(10) VALUE 'Highlight' HIGHLIGHT.
           03  success-field LINE + 2, PIC X, REQUIRED,
                                              USING success-flag.

       PROCEDURE DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([LEFTLINE])
AT_KEYWORDS([GRID])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

# Currently not implemented
AT_XFAIL_IF([true])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  PIC X(80)
               VALUE 'Enter "y" if the string has a vertical line to '
               & 'its left:'.
           03  LINE + 1, COL 2, PIC X(10) VALUE 'Leftline' LEFTLINE.
           03  success-field LINE + 2, PIC X, REQUIRED,
                                              USING success-flag.

       PROCEDURE DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([LOWLIGHT])
AT_KEYWORDS([])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  PIC X(80)
               VALUE 'Enter "y" if the string below is dim (lowlight):'.
           03  LINE + 1, PIC X(10) VALUE 'Lowlight' LOWLIGHT.
           03  success-field LINE + 2, PIC X, REQUIRED,
                                              USING success-flag.

       PROCEDURE DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([OVERLINE])
AT_KEYWORDS([])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

# Currently not implemented
AT_XFAIL_IF([true])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  PIC X(80)
               VALUE 'Enter "y" if the string below is overlined:'.
           03  LINE + 1, PIC X(10) VALUE 'Overline' OVERLINE.
           03  success-field LINE + 2, PIC X, REQUIRED,
                                              USING success-flag.

       PROCEDURE DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([REVERSE-VIDEO])
AT_KEYWORDS([])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  PIC X(80)
               VALUE 'Enter "y" if the background and foreground '
               & 'colours of the string below have'.
           03  LINE + 1, PIC X(80) VALUE 'swapped:'.
           03  LINE + 1, PIC X(20) VALUE 'Reversed colours'
               REVERSE-VIDEO.
           03  success-field LINE + 2, PIC X USING success-flag.

       PROCEDURE DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([SECURE])
AT_KEYWORDS([PASSWORD])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  dummy        PIC X(10).
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  PIC X(80)
               VALUE 'Enter "y" if text in the field below is replaced '
               & 'with asterisks:'.
           03  LINE + 1, PIC X(10) SECURE TO dummy, PROMPT CHARACTER
               "-".
           03  success-field LINE + 2, PIC X, REQUIRED,
                                              USING success-flag.

       PROCEDURE DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([SIZE with items])
AT_KEYWORDS([PROTECTED extensions])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       01  num-1		PIC 9(5) VALUE 12345.
       01  num-2        PIC X(10) VALUE '12345'.
       01  num-3        PIC 9(4) VALUE 1234.

       01  four         PIC 9 VALUE 4.

       PROCEDURE        DIVISION.
           DISPLAY 'Enter "y" if you see exactly four rows of 1234, all'
               & ' aligned.' LINE 1

           DISPLAY num-1 LINE 3 COL 3, SIZE 4;
               num-2 LINE 4 COL 3, SIZE four;
               num-3 LINE 5 COL 3, SIZE 8;
               '1234' LINE 6 COL 3, SIZE ZERO

           ACCEPT success-flag LINE 8, REQUIRED UPDATE

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([SIZE with figurative constants])
AT_KEYWORDS([PROTECTED extensions])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       PROCEDURE        DIVISION.
           DISPLAY 'Enter "y" if you see exactly three rows of quotes, '
               & 'zeroes and ''abc'',', LINE 1
           DISPLAY '8 characters long, all aligned.', LINE 2

           DISPLAY QUOTES LINE 4 COL 3, SIZE 8;
               ZEROES LINE 5 COL 3, SIZE 8;
               ALL 'abc' LINE 6 COL 3, SIZE 8

           DISPLAY '123456789' LINE 7 COL 3
           DISPLAY SPACE LINE 7 COL 3, SIZE 9

           ACCEPT success-flag LINE 8, REQUIRED UPDATE

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([UPDATE])
AT_KEYWORDS([extensions])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  n-str        PIC X(12) VALUE SPACES.
       01  success-flag PIC X.
           88  success VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  VALUE 'Enter "y" if the entry field below is filled with'
                 & ' N''s'.
           03  n-field, LINE + 1, PIC X(12) USING n-str.
           03  success-field, LINE + 2, PIC X, REQUIRED,
               TO success-flag, FROM 'Y'.

       PROCEDURE        DIVISION.
           DISPLAY scr
           MOVE ALL 'N' TO n-str
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE -fno-accept-update prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([UNDERLINE])
AT_KEYWORDS([])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.

       SCREEN           SECTION.
       01  scr.
           03  PIC X(80)
               VALUE 'Enter "y" if the string below is underlined:'.
           03  LINE + 1, PIC X(10) VALUE 'Underline' UNDERLINE.
           03  success-field LINE + 2, PIC X, REQUIRED,
                                              USING success-flag.

       PROCEDURE DIVISION.
           DISPLAY scr
           ACCEPT scr

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([HOME key])
AT_KEYWORDS([HOME SIZE])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.
       01  ws-x-20      PIC X(20).
       PROCEDURE DIVISION.
           DISPLAY "Enter 'y' if multiple presses of the HOME key"
               LINE 1 COLUMN 1.
           DISPLAY "go to the beginning of the field and the beginning"
               LINE 2 COLUMN 1.
           DISPLAY "of the characters."
               LINE 3 COLUMN 1.

           MOVE "    ABC   " TO WS-X-20.
           ACCEPT WS-X-20
               LINE 5 COLUMN 1
               WITH
                   AUTO-SKIP
                   SIZE 10
                   UPDATE.

           ACCEPT SUCCESS-FLAG
               LINE 7 COLUMN 1
               WITH UPDATE.

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([END key])
AT_KEYWORDS([END SIZE])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.
       01  ws-x-20      PIC X(20).
       PROCEDURE DIVISION.
           DISPLAY "Enter 'y' if multiple presses of the END key"
               LINE 1 COLUMN 1.
           DISPLAY "go to the end of the field and just after the end"
               LINE 2 COLUMN 1.
           DISPLAY "of the characters."
               LINE 3 COLUMN 1.

           MOVE "   ABC    " TO WS-X-20.
           ACCEPT WS-X-20
               LINE 5 COLUMN 1
               WITH
                   AUTO-SKIP
                   SIZE 10
                   UPDATE.

           ACCEPT SUCCESS-FLAG
               LINE 7 COLUMN 1
               WITH UPDATE.

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([INSERT key])
AT_KEYWORDS([INSERT SIZE])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.
       01  ws-x-20      PIC X(20).
       PROCEDURE DIVISION.
           DISPLAY "Enter 'y' if multiple presses of the INSERT key"
               LINE 1 COLUMN 1.
           DISPLAY "go back and forth between"
               LINE 2 COLUMN 1.
           DISPLAY "Insert Mode ON (characters move to the right)"
               LINE 3 COLUMN 1.
           DISPLAY "and Insert Mode OFF (characters type over)."
               LINE 4 COLUMN 1.

           MOVE "ABCD      " TO WS-X-20.
           ACCEPT WS-X-20
               LINE 6 COLUMN 1
               WITH
                   AUTO-SKIP
                   SIZE 10
                   UPDATE.

           ACCEPT SUCCESS-FLAG
               LINE 8 COLUMN 1
               WITH UPDATE.

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([BACKSPACE key])
AT_KEYWORDS([BACKSPACE SIZE])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.
       01  ws-x-20      PIC X(20).
       PROCEDURE DIVISION.
           DISPLAY "Enter 'y' if each press of the BACKSPACE key"
               LINE 1 COLUMN 1.
           DISPLAY "deletes the character to the left and moves the"
               LINE 2 COLUMN 1.
           DISPLAY "cursor and remaining characters one space to the"
               LINE 3 COLUMN 1.
           DISPLAY "left."
               LINE 4 COLUMN 1.

           MOVE "ABCD      " TO WS-X-20.
           ACCEPT WS-X-20
               LINE 6 COLUMN 1
               WITH
                   AUTO-SKIP
                   SIZE 10
                   UPDATE.

           ACCEPT SUCCESS-FLAG
               LINE 8 COLUMN 1
               WITH UPDATE.

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([DELETE key])
AT_KEYWORDS([DELETE SIZE])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.
       01  ws-x-20      PIC X(20).
       PROCEDURE DIVISION.
           DISPLAY "Enter 'y' if each press of the DELETE key deletes"
               LINE 1 COLUMN 1.
           DISPLAY "the cursor character and moves the remaining"
               LINE 2 COLUMN 1.
           DISPLAY "characters one space to the left.  And the cursor"
               LINE 3 COLUMN 1.
           DISPLAY "does not move."
               LINE 4 COLUMN 1.

           MOVE "ABCD      " TO WS-X-20.
           ACCEPT WS-X-20
               LINE 6 COLUMN 1
               WITH
                   AUTO-SKIP
                   SIZE 10
                   UPDATE.

           ACCEPT SUCCESS-FLAG
               LINE 8 COLUMN 1
               WITH UPDATE.

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([ALT DELETE key])
AT_KEYWORDS([ALT-DELETE SIZE])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.
       01  ws-x-20      PIC X(20).
       PROCEDURE DIVISION.
           DISPLAY "Enter 'y' if pressing the ALT and DELETE keys"
               LINE 1 COLUMN 1.
           DISPLAY "deletes all characters from the cursor to the end"
               LINE 2 COLUMN 1.
           DISPLAY "of the field.  And the cursor does not move."
               LINE 3 COLUMN 1.

           MOVE "ABCD      " TO WS-X-20.
           ACCEPT WS-X-20
               LINE 5 COLUMN 1
               WITH
                   AUTO-SKIP
                   SIZE 10
                   UPDATE.

           ACCEPT SUCCESS-FLAG
               LINE 7 COLUMN 1
               WITH UPDATE.

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([ALT LEFT-ARROW key])
AT_KEYWORDS([ALT-LEFT-ARROW SIZE])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.
       01  ws-x-20      PIC X(20).
       PROCEDURE DIVISION.
           DISPLAY "Enter 'y' if pressing the ALT and LEFT-ARROW keys"
               LINE 1 COLUMN 1.
           DISPLAY "at the first column does not exit the field."
               LINE 2 COLUMN 1.
           DISPLAY "But the LEFT-ARROW without ALT does exit."
               LINE 3 COLUMN 1.

           MOVE "ABCD      " TO WS-X-20.
           ACCEPT WS-X-20
               LINE 5 COLUMN 1
               WITH
                   AUTO-SKIP
                   SIZE 10
                   UPDATE.

           ACCEPT SUCCESS-FLAG
               LINE 7 COLUMN 1
               WITH UPDATE.

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP


AT_SETUP([ALT RIGHT-ARROW key])
AT_KEYWORDS([ALT-RIGHT-ARROW SIZE])

AT_SKIP_IF(test "$COB_HAS_CURSES" != "yes")

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  success-flag PIC X VALUE 'Y'.
           88  success  VALUE 'Y', 'y'.
       01  ws-x-10      PIC X(10).
       PROCEDURE DIVISION.
           DISPLAY "Enter 'y' if pressing the ALT and RIGHT-ARROW keys"
               LINE 1 COLUMN 1.
           DISPLAY "at the last column does not exit the field."
               LINE 2 COLUMN 1.
           DISPLAY "But the RIGHT-ARROW without ALT does exit."
               LINE 3 COLUMN 1.

           MOVE "ABCDE" TO WS-X-10.
           ACCEPT WS-X-10
               LINE 5 COLUMN 1
               WITH
                   AUTO-SKIP
                   SIZE 5
                   UPDATE.

           ACCEPT SUCCESS-FLAG
               LINE 7 COLUMN 1
               WITH UPDATE.

           IF success AND COB-CRT-STATUS = 0
               GOBACK RETURNING 0
           ELSE
               GOBACK RETURNING 1
           END-IF
           .
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([$RUN_PROG_MANUAL], [0], [], [])

AT_CLEANUP
