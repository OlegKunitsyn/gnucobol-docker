#
# Makefile gnucobol
#
# Copyright (C) 2003-2012, 2014-2018 Free Software Foundation, Inc.
# Written by Keisuke Nishida, Roger While, Simon Sobisch
#
# This file is part of GnuCOBOL.
#
# The GnuCOBOL compiler is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# GnuCOBOL is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GnuCOBOL.  If not, see <http://www.gnu.org/licenses/>.

include_HEADERS = libcob.h

SUBDIRS = lib libcob cobc bin config copy po doc extras tests

# define prerequisites to fix parallel builds
libcob: defaults.h lib
cobc: libcob
bin: libcob
po: cobc
doc: cobc
extras: cobc
test: bin cobc
check: bin cobc

ACLOCAL_AMFLAGS = -I m4 --install
BUILT_SOURCES = defaults.h
DISTCLEANFILES = $(BUILT_SOURCES)
# CLEANFILES = $(bin_SCRIPTS)

EXTRA_DIST = gnucobol.spec po/update_linguas.sh

# Add rules for code-coverage testing, as defined by AX_CODE_COVERAGE
CODE_COVERAGE_BRANCH_COVERAGE=1
# FIXME: needs GNU make, even if not enabled
#@ CODE_COVERAGE_RULES @

dist-hook:
	echo "#define COB_TAR_DATE \"`LC_ALL=C date -u +'%b %d %Y %T'` UTC\"" > $(distdir)/tarstamp.h
	echo "#define COB_NUM_TAR_DATE `LC_ALL=C date -u +'%Y%m%d'`" >> $(distdir)/tarstamp.h
	echo "#define COB_NUM_TAR_TIME `LC_ALL=C date -u +'%H%M%S'`" >> $(distdir)/tarstamp.h
	find $(distdir) -type d -print | xargs chmod 755
	find $(distdir) -type f -print | xargs chmod 644
	touch $(distdir)/m4/*.m4
	touch $(distdir)/aclocal.m4
	touch $(distdir)/Makefile.in
	touch $(distdir)/*/Makefile.in
	touch $(distdir)/*/*/Makefile.in
	touch $(distdir)/configure
	touch $(distdir)/config.h.in
	touch $(distdir)/doc/stamp-vti
	chmod 755 $(distdir)/build_aux/compile
	chmod 755 $(distdir)/build_aux/config.guess
	chmod 755 $(distdir)/build_aux/config.sub
	chmod 755 $(distdir)/build_aux/config.rpath
	chmod 755 $(distdir)/build_aux/depcomp
	chmod 755 $(distdir)/build_aux/install-sh
	chmod 755 $(distdir)/build_aux/ltmain.sh
	chmod 755 $(distdir)/build_aux/mdate-sh
	chmod 755 $(distdir)/build_aux/missing
	chmod 755 $(distdir)/build_aux/mkinstalldirs
	chmod 755 $(distdir)/build_aux/ylwrap
	chmod 755 $(distdir)/configure
	chmod 755 $(distdir)/doc/cobcinfo.sh
	chmod 755 $(distdir)/tests/testsuite
	chmod 755 $(distdir)/tests/listings-sed.sh
	chmod 755 $(distdir)/po/update_linguas.sh
#	touch $(distdir)/cobc/ppparse.c
#	touch $(distdir)/cobc/parser.c
#	touch $(distdir)/cobc/pplex.c
#	touch $(distdir)/cobc/scanner.c
#	$(distdir)/doc/cobcinfo.sh "fixtimestamps"
#	touch $(distdir)/libcob/libcob.3
#	touch $(distdir)/bin/cobcrun.1
#	touch $(distdir)/cobc/cobc.1
# Create dist_win manually (dist-zip would have the same content as dist-gzip)
	if test -f create_win_dist.sh; then \
		EXTSRCDIR=$(srcdir) EXTDISTDIR=$(distdir) ./create_win_dist.sh; \
	fi

defaults.h: Makefile.am $(top_builddir)/config.status
	@echo "Creating defaults.h..."
	@{								\
	  echo "/* Automatically generated by Makefile */";		\
	  echo "#define COB_CC           \"$(COB_CC)\"";		\
	  echo "#define COB_CFLAGS       \"$(COB_CFLAGS)\"";		\
	  echo "#define COB_LDFLAGS      \"$(COB_LDFLAGS)\"";		\
	  echo "#define COB_LIBS         \"$(COB_LIBS)\"";		\
	  echo "#define COB_CONFIG_DIR   \"$(COB_CONFIG_DIR)\"";	\
	  echo "#define COB_COPY_DIR     \"$(COB_COPY_DIR)\"";		\
	  echo "#define COB_LIBRARY_PATH \"$(COB_LIBRARY_PATH)\"";	\
	  echo "#define COB_BLD_CC       \"$(CC)\"";			\
	  echo "#define COB_BLD_CPPFLAGS \"$(CPPFLAGS)\"";		\
	  echo "#define COB_BLD_CFLAGS   \"$(CFLAGS)\"";		\
	  echo "#define COB_BLD_LD       \"$(LD)\"";			\
	  echo "#define COB_BLD_LDFLAGS  \"$(LDFLAGS)\"";		\
	  echo "#define COB_BLD_BUILD    \"$(build)\"";			\
	  echo "#define LOCALEDIR        \"$(datadir)/locale\"";	\
	} > defaults.h


# targets that are only logical targets instead of files
.PHONY: test checkall checkmanual

test: all
	cd tests && $(MAKE) $(AM_MAKEFLAGS) test
checkmanual: all
	cd tests && $(MAKE) $(AM_MAKEFLAGS) checkmanual

checkall: check test

